defaultTasks 'installAnnouncement'

// Set build properties in non-SCM-controlled file "gradle.properties" in
// current directory (or your shared user-specific one).

// TODO:  Exclude .* files from jars, zips, tars

// Apply the java plugin to add support for Java
apply plugin: 'application'
apply plugin: 'groovy'

//run.args = ['1', '3']

sourceCompatibility = '1.7'
//assert hasProperty('JAVA6_JRE_JAR')
// FUCK trying to get rid of the boostrap lib warnings!
// Have to compile in fork mode for bootClasspath settings to have any effect.
//tasks.withType(Compile) {
    //options.bootClasspath = project.property('JAVA6_JREversion '0.1-SNAPSHOT'
project.ext.set('spec.version', '0.1')
project.ext.set('org.name', 'Axis Data Management Corp')

applicationDefaultJvmArgs = ['-ea']
//applicationDefaultJvmArgs = ['-ea', '-Dcom.admc.holdem.fixed_seat=true']

mainClassName = 'com.admc.flexmark.Gen'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    //flatDir { dirs "${System.properties['user.home']}/sharedhome/localJavaRepos" }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.codehaus.groovy:groovy:2.4.9',
      'org.codehaus.groovy:groovy-templates:2.4.9',
      'com.vladsch.flexmark:flexmark-all:0.16.1'
}

project.ext.set('rtLibs', null)
jar { doFirst {
    project.ext.set('rtLibs', [])
    configurations.runtime.files.each { project.rtLibs << it.name }
    manifest {
        attributes(
            'Main-Class': mainClassName,
            'Class-Path': project.rtLibs.join(' '),
            'Specification-Title': archivesBaseName,
            'Specification-Version': project.property('spec.version'),
            'Specification-Vendor': 'Axis Data Management Corp.',
            'Implementation-Title': archivesBaseName,
            'Implementation-Version': project.version,
            'Implementation-Vendor': project.property('org.name')
        )
    }
} }

processResources {
    exclude '**/.*'
}

task installAnnouncement(dependsOn: installDist) { doLast {
    println "To run:\n    build/install/$project.name/bin/$project.name"
} }
